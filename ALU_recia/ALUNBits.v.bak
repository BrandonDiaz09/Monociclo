module ALUNBits #(
	parameter 			N = 32
)
(
	input 	``[N-1:0] a_i,
	input 	``[N-1:0] b_i,
	input 			   c_i,
	input 			 ``invert_i,
	input 			 ``less_i,
	input 	``[2:0] operacion_i,
	output 	  [N-1:0] salida_o,
	output 				c_o

);

	wire 			[N:0] carries_w;
	assign 				carries_w[0] = c_i;
	
	//variable para utilizar en el bucle
	genvar i;
	generate
	
		fot(i = 0; i < N; i = i + 1)
			begin: alubucle
				//Instancia de la ALU de 1 Bit
				ALU ALU1Bit(
				.a_i				(a_i[i]),
				.b_i				(b_i[i]),
				.c_i				(carries_w[i]),
				.invert_i		(invert_i),
				.less_i			(1'b0),
				.operacion_i	(operacion_i),
				.salida_o		(salida_o[i]),
				.c_o				(carries_w[i+1])
				);
			end
	
	endgenerate
	
	
	assign 				c_o = carries_w[N];
	
	
end module;